package model;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Random;

public class HiddenBoardMatrix extends BoardMatrix implements HiddenBoard{

	
	
	private Card[][] hiddenBoard;
	
	
	public HiddenBoardMatrix(int height, int width) {
		super(height, width);
		hiddenBoard = new Card[height][width];
		
		
		
		List<Card> list = new ArrayList<Card>(height*width);
		for(int i = 1; i <= (height*width) / 2; i++) {
			list.add(new Card(i));
			list.add(new Card(i));
		}
		
		Collections.shuffle(list);
		
		int index = 0;
		for(int row = 0; row < hiddenBoard.length; row++) {
			for(int column = 0; column < hiddenBoard[row].length; column++) {
				hiddenBoard[row][column] = list.get(index);
				index++;
			}
		}	
	}
	
	public boolean isMatch(Position position1, Position position2, int playerID) {
		boolean Match = false;
		if(position1 == position2) {
			Match = true;
		}
		return Match;
	}
	
	
	public Card getHiddenCardAtPosition(Position position) {
		if(inBounds(position)) {
			return hiddenBoard[position.getRow()][position.getColumn()];
		}
		return new Card(0);
	}
	
	public String toStringHidden() {
		String s = "";
		for(Card[] row: hiddenBoard) {
			for(Card card : row) {
				s+=card.getNumber() + "\t";
			}
			s+= "\n";
		}
		return s;
	}
	
	
	
	
}
